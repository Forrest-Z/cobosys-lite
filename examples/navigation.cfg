
driver
(
	name "RobotBase"
	provides ["odometry:::position2d:0"]
	port "/dev/robotbase"
	addimu true

)



driver(
name "Rplidar"
provides ["laser:0"]
port "/dev/rplidar"
pose [0.27 0 0]
is_laser_boundary true
)


driver
(
  name "mapfile"
  provides ["map:0"]
  filename "test.pgm"
)
driver
(
 name "amcl"
 provides ["localize:0" "position2d:2" ]
 requires ["odometry:::position2d:0" "laser:0" "laser:::map:0"]
 pf_min_samples 1000 
 pf_max_samples 100000
 init_pose [0 0 6.28] 
 init_pose_var [0.5 0.5 0.5]

)
#driver
#(
#  name "vfh" 
#  provides ["position2d:1"]
#  requires ["position2d:0" "laser:0"]
#  cell_size 0.05
#  window_diameter 120
#  max_speed 0.3
#  safety_dist 0.3
#  distance_epsilon 0.3
#  angle_epsilon 5
#  escape_max_turnrate -0.3
#  escape_speed -0.3
#)


#driver
#(
#  name "snd"
#  provides ["position2d:1"]
#  requires ["input:::position2d:2" "output:::position2d:0" "laser:0"]
#  robot_radius 0.15
#  max_speed 0.3
#  max_turn_rate 30
#)

driver
(
  name "nd"
  provides ["position2d:1"]
  requires ["output:::position2d:0" "input:::position2d:2" "laser:0" ]

  max_speed [0.3 30.0]
  min_speed [0.1 10.0]
  goal_tol [0.3 15.0]
  wait_on_stall 1

  rotate_stuck_time 5.0
  translate_stuck_time 5.0
  translate_stuck_dist 0.15
  translate_stuck_angle 10.0

  avoid_dist 0.4
  safety_dist 0.0

  laser_buffer 1
)

driver
(
  name "wavefront"
  provides ["online:::planner:0"]
  requires ["output:::position2d:1" "input:::position2d:2" "map:0"]
  safety_dist 0.5
  distance_epsilon 0.5
  angle_epsilon 10 
)



